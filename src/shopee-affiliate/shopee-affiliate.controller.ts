import { Controller, Get, Logger } from '@nestjs/common';
import { ShopeeAffiliateService } from './shopee-affiliate.service';
import { GoogleSheetsService } from '../google-sheets/google-sheets.service';
import { NotificationService } from '../notification/notification.service';

@Controller('shopee-affiliate')
export class ShopeeAffiliateController {
  private readonly logger = new Logger(ShopeeAffiliateController.name);

  constructor(
    private readonly shopeeAffiliateService: ShopeeAffiliateService,
    private readonly googleSheetsService: GoogleSheetsService,
    private readonly notificationService: NotificationService,
  ) {}

  @Get('conversion-report')
  async getConversionReport() {
    this.logger.debug(
      'ƒêang g·ªçi API Shopee Affiliate ƒë·ªÉ l·∫•y b√°o c√°o chuy·ªÉn ƒë·ªïi',
    );

    const currentDate = new Date();
    const day = currentDate.getDate();
    const month = currentDate.getMonth() + 1;
    const year = currentDate.getFullYear();

    try {
      const response = await this.shopeeAffiliateService.getConversionReport(
        day,
        month,
        year,
      );
      const responseCalculateTotals =
        this.shopeeAffiliateService.calculateTotals(response);
      this.logger.debug(responseCalculateTotals);
      console.log('test log');

      if (!responseCalculateTotals.hasToday) return 'H√¥m nay ch∆∞a c√≥ b√°o c√°o';

      if (await this.googleSheetsService.hasSentMessageToday()) {
        console.log('H√¥m nay ƒë√£ g·ª≠i tin nh·∫Øn, kh√¥ng g·ª≠i n·ªØa.');
        return 'H√¥m nay ƒë√£ g·ª≠i tin nh·∫Øn, kh√¥ng g·ª≠i n·ªØa.';
      }

      // if (await this.redisService.hasSentMessageToday()) {
      //   console.log('H√¥m nay ƒë√£ g·ª≠i tin nh·∫Øn, kh√¥ng g·ª≠i n·ªØa.');
      //   return;
      // }
      const content = `Hoa h·ªìng c·ªßa ng√†y ${day - 1}/${month}/${year} ƒë√£ c√≥ r·ªìi b·∫°n ∆°i üòäüòä
T·ªïng hoa h·ªìng ng√†y h√¥m nay l√†: ${this.shopeeAffiliateService
        .calculateTotals(response)
        .totalcommissionDay.toLocaleString('vi-VN', {
          style: 'currency',
          currency: 'VND',
        })}
T·ªïng s·ªë ƒë∆°n h√†ng ng√†y h√¥m nay l√†: ${responseCalculateTotals.totalRecordsDay} ƒë∆°n
----------------
T·ªïng hoa h·ªìng th√°ng n√†y l√†: ${responseCalculateTotals.totalcommissionMonth.toLocaleString(
        'vi-VN',
        {
          style: 'currency',
          currency: 'VND',
        },
      )}
      `;

      await this.notificationService.sendMessageToTelegram(content);
      await this.googleSheetsService.markMessageSent(`${day}/${month}/${year}`);
      // await this.redisService.markMessageSent();
      return content;
    } catch (error) {
      this.logger.error('L·ªói khi g·ªçi API Shopee Affiliate:', error.message);

      return 'L·∫•y b√°o c√°o kh√¥ng th√†nh c√¥ng';
    }
  }
  @Get()
  getUsers(): string {
    return 'This action returns all users';
  }
}
